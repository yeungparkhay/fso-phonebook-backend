{"version":3,"sources":["services/personService.js","App.js","index.js"],"names":["url","exportedObject","getPersons","axios","get","then","response","data","createPerson","personObject","post","updatePerson","id","put","deletePerson","delete","Persons","persons","deleteEntry","map","person","name","number","onClick","Filter","prompt","handlePromptChange","value","onChange","PersonForm","addEntry","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","type","Notification","message","messageStyle","backgroundColor","color","padding","margin","style","text","App","useState","setPersons","setNewName","setNewNumber","setPrompt","setMessage","useEffect","personService","initialPersons","personsToShow","filter","toLowerCase","search","event","target","preventDefault","nameObject","includes","find","returnedPerson","window","confirm","catch","error","setTimeout","concat","personToDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.519a43f4.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst url = '/api/persons'\r\n\r\nconst getPersons = () => {\r\n    return axios.get(url).then(response => response.data)\r\n}\r\n\r\nconst createPerson = (personObject) => {\r\n    return axios.post(url, personObject).then(response => response.data)\r\n}\r\n\r\nconst updatePerson = (id, personObject) => {\r\n    return axios.put(`${url}/${id}`, personObject).then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    return axios.delete(`${url}/${id}`)\r\n}\r\n\r\nconst exportedObject = { getPersons, createPerson, updatePerson, deletePerson }\r\n\r\nexport default exportedObject","import React, { useEffect, useState } from 'react'\nimport personService from './services/personService'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ prompt, setPrompt ] = useState('')\n  const [ message, setMessage ] = useState('')\n\n  useEffect(() => {\n    personService\n      .getPersons()\n      .then(initialPersons => setPersons(initialPersons))\n  }, [])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handlePromptChange = (event) => {\n    setPrompt(event.target.value)\n  }\n\n  const addEntry = (event) => {\n    event.preventDefault()\n    const nameObject = {\n      name: newName,\n      number: newNumber\n    }\n    persons.map((person) => person.name).includes(newName)\n    ? personService\n      .updatePerson(persons.find(person => person.name === newName).id, nameObject)\n      .then(returnedPerson => {\n        if (window.confirm(`${returnedPerson.name} is already added to phonebook, replace the old number with a new one?`)) {\n          setPersons(persons.map(person => person.name !== newName ? person : returnedPerson))\n        }\n        setNewName('')\n        setNewNumber('')\n      })\n      .catch(error => {\n        setMessage({text: `Information of ${newName} has already been removed from server`, color: \"red\"})\n        setTimeout(() => {\n          setMessage('')\n        }, 5000)\n        setPersons(persons.filter(person => person.name !== newName))\n      })    \n    : personService\n        .createPerson(nameObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setMessage({text: `Added ${newName}`, color: \"green\"})\n          setTimeout(() => {\n            setMessage('')\n          }, 5000)\n          setNewName('')\n          setNewNumber('')\n        })\n\t\t.catch(error => {\n\t\t\tsetMessage({text: error.response.data, color: \"red\"})\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetMessage('')\n\t\t\t  }, 5000)\n\t\t})    \n  }\n\n  const deleteEntry = id => {\n    const personToDelete = persons.filter(person => person.id === id)[0]\n    if (window.confirm(`Delete ${personToDelete.name} ?`)) {\n      personService\n        .deletePerson(personToDelete.id)\n        .then(() => {\n          setPersons(persons.filter(person => person.id !== personToDelete.id))\n        })\n    }\n  }\n\n  const personsToShow = persons.filter(person => person.name.toLowerCase().search(prompt.toLowerCase()) !== -1)\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Filter prompt={prompt} handlePromptChange={handlePromptChange}/>\n      <h3>Add a new</h3>\n      <PersonForm addEntry={addEntry} newName={newName} newNumber={newNumber} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange}/>\n      <h3>Numbers</h3>\n      <Persons persons={personsToShow} deleteEntry={deleteEntry} />\n    </div>\n  )\n}\n\nconst Persons = ({ persons, deleteEntry }) => {\n  return (\n    persons.map((person) => (\n      <div key={person.id}>\n        <span>{person.name} </span>\n        <span>{person.number} </span>\n        <button onClick={() => deleteEntry(person.id)}>delete</button>\n      </div>\n    ))    \n  )\n}\n\nconst Filter = ({ prompt, handlePromptChange }) => {\n  return (\n    <div>\n      filter shown with <input value={prompt} onChange={handlePromptChange} />\n    </div>\n  )\n}\n\nconst PersonForm = ({ addEntry, newName, newNumber, handleNameChange, handleNumberChange }) => {\n  return (\n    <form onSubmit={addEntry}>\n        <div>\n          name: <input value={newName} onChange={handleNameChange} />\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={handleNumberChange} />\n        </div>\n        <button type=\"submit\">add</button>\n    </form>\n  )\n}\n\nconst Notification = ({ message }) => {\n  const messageStyle = {\n    backgroundColor: \"#ededed\",\n    color: message.color,\n    padding: 10,\n    margin: 10\n  }\n  \n  if (message === '') {\n    return (\n      <div></div>\n    )\n  }\n  else {\n    return (\n      <div style={messageStyle}>{message.text}</div>\n    )\n  }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}